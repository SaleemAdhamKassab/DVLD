<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cmsManageTestTypes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>